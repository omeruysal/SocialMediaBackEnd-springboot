spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=create
spring.datasource.url=jdbc:mysql://localhost:3306/reactapp
spring.datasource.username=root
spring.datasource.password=12345678

upload-path=picture-storage

#logging.level.org.springframework= DEBUG detayli loglara bakmak istedigimizde acariz

spring.security.user.password=123



spring.jpa.properties.javax.persistence.validation.mode : none
#yukaridaki properties ile hibernate validationi kaldiriyoruz. Cunku kaldirmazsak calismasini beklemedigimiz bir anda bir validatorun tekrar calismasindan kaynaklaniyor
#hata senaryosu : uniqueusernamevalidator unu spring icin olusturuyoruz ve class icinde userRepository kullaniyoruz, spring validator userRepositorye ulasabilir.
#fakat hibernate icin none yapmazsak , hibernate de bir uniqueusernamevalidator olusturur, fakat hibernate userRepository bean ine ulasamaz ve null pointer exception firlatir
# spring validator --- usercontroller -- userservice -- userrepository -- hibernate validator
# semada goruldugu gibi spring validator userrepositorye ulasabilir fakat hibernate gerisinde kaldigi icin ulasamaz

#spring.data.web.pageable.page-parameter=currentPage bu sekilde page api default parametrelerini degistirebiliriz
#spring.data.web.pageable.size-parameter=pageSize